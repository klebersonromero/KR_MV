/*:
 *
 * @plugindesc Kleberson Romero Wather Mark
 * @author Kleberson Romero (GS_TEAM)
 * @version 1.0.4
 *
 * @param Image
 * @desc Imagem a ser utilizada como marca d'agua
 * @default Logo
 *
 * @param Opacity Wathermark
 * @desc Opacidade da Imagem de Marca D'agua
 * @default 150
 *
 * @param Position Wathermark
 * @desc Posição da Imagem de Marca D'agua
 * 0 Sup.Esquerdo, 1 Inf.Esquerdo,2 Sup.Direito, 3 Inf.Direito
 * @default 0
 *
 * @help
 * Esse plugin adiciona uma marca d'agua no seu projeto
 * seu uso é mais constante em vídeo aulas ou tutoriais.
 *
 * Comandos de plugin:
 * Wathermark hide - Escode a Wathermark
 * Wathermark show - Mostra a Wathermark
 * Wathermark move x, y - Troca a posição da Wathermark
 * Wathermark opacity value - Muda a opacidade da Wathermark
 * Wathermark animate true/false - Ativa e desativa a animação da Wathermark 
 *
 * Exemplos:
 * Wathermark move 120 120
 * Wathermark opacity 120
 * Wathermark animate true  
 * Wathermark show
 * Wathermark hide
 * 
*/

var parameters = PluginManager.parameters('KR_Plugin'); // Nome do Arquivo de Plugins sem o .JS
var KR_LogoImage = String(parameters['Image'] || 'Logo');    // Imagem do Logo definido pelo PluginManager Img deve ficar em System
var KR_Opacity = Number(parameters['Opacity Wathermark'] || 150);
var KR_Position = Number(parameters['Position Wathermark'] || 1);

var KR = KR || {};

var _Scene_Base_createWindowLayer = Scene_Base.prototype.createWindowLayer;
Scene_Base.prototype.createWindowLayer = function(){
	_Scene_Base_createWindowLayer.call(this);
	this.createWathermark();
};

Scene_Base.prototype.createWathermark = function() {
    this._krSprite1 = new Sprite(ImageManager.loadSystem(KR_LogoImage));
    var LogoIm = this._krSprite1
    this.addChild(this._krSprite1);
    this._count = new Number();
    this._krSprite1.opacity = KR_Opacity;
    if(KR_Position === 1){
    this._krSprite1.y = Graphics.height / 1.2;
    };
    if(KR_Position === 2){
    this._krSprite1.x = Graphics.width / 1.3;
    };
    if(KR_Position === 3){
    this._krSprite1.y = Graphics.height / 1.2;
    this._krSprite1.x = Graphics.width / 1.3;
    };

};


var _Scene_Base_update  = Scene_Base.prototype.update;
Scene_Base.prototype.update = function() {
    _Scene_Base_update.call(this);
    if(typeof this._krSprite1 === 'object')
    {
        if(KR.animate){
        this._count += 0.06;
        this._krSprite1.scale.x = 1 + Math.sin(this._count) * 0.02;
        this._krSprite1.scale.y = 1 + Math.sin(this._count) * 0.02;
        }else{
        this._krSprite1.scale.x = 1.0
        this._krSprite1.scale.y = 1.0;            
        }
        if(KR.hide){this._krSprite1.opacity -= 4}else if(!KR.hide){
        if(this._krSprite1.opacity <= KR_Opacity){this._krSprite1.opacity += 4}else{KR.hide = null}};
        if(KR.move)this._krSprite1.move(KR.moveX, KR.moveY);
        if(KR.changeOpacity){if(this._krSprite1.opacity <= KR_Opacity){this._krSprite1.opacity += 4}else if(this._krSprite1.opacity >= KR_Opacity){this._krSprite1.opacity -= 4}else{KR.changeOpacity = false}};
    }
};

var _pluginCommand_command = Game_Interpreter.prototype.pluginCommand;

Game_Interpreter.prototype.pluginCommand = function(command, args) {
   _pluginCommand_command.call(this, command, args);
   if (command === 'Wathermark') {
      var texto = String(args[0]);
      var numero1 = Number(args[1]);
      var numero2 = Number(args[2]);
      var boolean = eval(String(args[1]).toLowerCase());
      if(texto === 'hide')return KR.hide = true;
      if(texto === 'show')return KR.hide = false;
      if(texto === 'move')return KR.move = true, KR.moveX = numero1, KR.moveY = numero2;
      if(texto === 'opacity')return KR.changeOpacity = true, KR_Opacity = numero1;
      if(texto === 'animate')return KR.animate = boolean;
   }
};
