/*:
 *
 * @plugindesc KR_Plugin
 * @author Kleberson Romero (GS_TEAM)
 * @version 1.4
 *
 * @param ===================
 * @default  KR_PLUGIN WATHERMARK CONFIG
 *
 * @param Image
 * @desc Imagem a ser utilizada como marca d'agua
 * @default Logo
 *
 * @param Opacity Wathermark
 * @desc Opacidade da Imagem de Marca D'agua
 * @default 150
 *
 * @param Position Wathermark
 * @desc Posição da Imagem de Marca D'agua
 * 0 Sup.Esquerdo, 1 Inf.Esquerdo,2 Sup.Direito, 3 Inf.Direito
 * @default 0
 *
 * @help
 * Esse plugin é excencial para funcionamento de todos os
 * plugins de minha autoria.
 * Esse plugin adiciona uma marca d'agua no seu projeto
 * seu uso é mais constante em vídeo aulas ou tutoriais.
 *
 * Esse plugin possui configuração de outros plugins 
 * Atualizações:

 * Versão 1.4
 * Devolução da automomia de configuração da HUD para o KR_HUD Plugin;
 *
 * Versão 1.3 
 * Resolvidos conflitos no PluginManager;
 *
 * Versão 1.2 
 * Comandos de Plugin para Hud add;
 *  
 *
 * Versão 1.1
 * Variaveis substituidas e colocadas no Objeto KR padrão 
 *
 * Versão 1.0
 * Funcionalidade e obrigatoriedade adicionada para funcionamento
 * em plugins de minha autoria.
 * Comandos da KR_HUD add
 *
 * |Comandos de plugin Wathermark:|
 * Wathermark hide - Escode a Wathermark;
 * Wathermark show - Mostra a Wathermark;
 * Wathermark move x, y - Troca a posição da Wathermark;
 * Wathermark opacity value - Muda a opacidade da Wathermark;
 * Wathermark animate true/false - Ativa e desativa a animação da Wathermark;
 *
 * Exemplos:
 * Wathermark move 120 120;
 * Wathermark opacity 120;
 * Wathermark animate true;
 * Wathermark show;
 * Wathermark hide;
 *
 * |Comandos de plugin Hud:|
 * Hud.hide   - Esconde a Hud;
 * Hud.show   - Mostra a Hud;
 * 


*/
// OBJETO PRINCIPAL
var KR = KR || {};
// Objetos
KR.KR_Plugin = {};
KR.Hud       = {};
KR.Title     = {};
//-------------------------------------------------------------------------------------------------
//  Versão do Plugin
KR.version = 1.4
//-------------------------------------------------------------------------------------------------
//  CONFIG WatherMark
//-------------------------------------------------------------------------------------------------
KR.KR_Plugin.parameters   = PluginManager.parameters('KR_Plugin');
KR.KR_Plugin.KR_LogoImage = String(KR.KR_Plugin.parameters['Image'] || 'Logo');
KR.KR_Plugin.KR_Opacity   = Number(KR.KR_Plugin.parameters['Opacity Wathermark'] || '150');
KR.KR_Plugin.KR_Position  = Number(KR.KR_Plugin.parameters['Position Wathermark'] || 1);
//-------------------------------------------------------------------------------------------------
// Alias da Scene_Base.createWindowLayer
//-------------------------------------------------------------------------------------------------
var _Scene_Base_createWindowLayer = Scene_Base.prototype.createWindowLayer;
Scene_Base.prototype.createWindowLayer = function(){
	_Scene_Base_createWindowLayer.call(this);
	this.createWathermark();
};
//-------------------------------------------------------------------------------------------------
// Nova Função da Scene_Base | createWathermark
//-------------------------------------------------------------------------------------------------
Scene_Base.prototype.createWathermark = function() {
    this._krSprite1 = new Sprite(ImageManager.loadSystem(KR.KR_Plugin.KR_LogoImage));
    var LogoIm = this._krSprite1
    this.addChild(this._krSprite1);
    this._count = new Number();
    this._krSprite1.opacity = KR.KR_Plugin.KR_Opacity;
    if(KR.KR_Plugin.KR_Position === 1){
    this._krSprite1.y = Graphics.height / 1.2;
    };
    if(KR.KR_Plugin.KR_Position === 2){
    this._krSprite1.x = Graphics.width / 1.3;
    };
    if(KR.KR_Plugin.KR_Position === 3){
    this._krSprite1.y = Graphics.height / 1.2;
    this._krSprite1.x = Graphics.width / 1.3;
    };
};
//-------------------------------------------------------------------------------------------------
// Alias da Scene_Base.update Chamada da Função nova update_wathermark
//-------------------------------------------------------------------------------------------------
var _Scene_Base_update  = Scene_Base.prototype.update;
Scene_Base.prototype.update = function() {
    _Scene_Base_update.call(this);
    Scene_Base.prototype.update_wathermark.call(this);    
};
//-------------------------------------------------------------------------------------------------
// Nova função Scene_Base.update / update_wathermark
//-------------------------------------------------------------------------------------------------
Scene_Base.prototype.update_wathermark = function () {
  if(typeof this._krSprite1 === 'object')
    {
        if(KR.KR_Plugin.animate){
        this._count += 0.06;
        this._krSprite1.scale.x = 1 + Math.sin(this._count) * 0.02;
        this._krSprite1.scale.y = 1 + Math.sin(this._count) * 0.02;
        }else{
        this._krSprite1.scale.x = 1.0
        this._krSprite1.scale.y = 1.0;            
        }
        if(KR.KR_Plugin.hide){this._krSprite1.opacity -= 4}else if(!KR.KR_Plugin.hide){
        if(this._krSprite1.opacity <= KR.KR_Plugin.KR_Opacity){this._krSprite1.opacity += 4}else{KR.KR_Plugin.hide = null}};
        if(KR.KR_Plugin.move)this._krSprite1.move(KR.KR_Plugin.moveX, KR.KR_Plugin.moveY);
        if(KR.KR_Plugin.changeOpacity){if(this._krSprite1.opacity <= KR.KR_Plugin.KR_Opacity){this._krSprite1.opacity += 4}else if(this._krSprite1.opacity >= KR.KR_Plugin.KR_Opacity){this._krSprite1.opacity -= 4}else{KR.changeOpacity = false}};
    };
};

//-------------------------------------------------------------------------------------------------
// Alias do PluginCommand_command
//-------------------------------------------------------------------------------------------------
var _pluginCommand_command = Game_Interpreter.prototype.pluginCommand;
Game_Interpreter.prototype.pluginCommand = function(command, args) {
   _pluginCommand_command.call(this, command, args);
      //
      var texto = String(args[0]);
      var numero1 = Number(args[1]);
      var numero2 = Number(args[2]);
      var boolean = eval(String(args[1]).toLowerCase());
      //
   if (command === 'Wathermark') {
      if(texto === 'hide')return KR.KR_Plugin.hide = true;
      if(texto === 'show')return KR.KR_Plugin.hide = false;
      if(texto === 'move')return KR.KR_Plugin.move = true, KR.KR_Plugin.moveX = numero1, KR.KR_Plugin.moveY = numero2;
      if(texto === 'opacity')return KR.KR_Plugin.changeOpacity = true, KR.KR_Plugin.KR_Opacity = numero1;
      if(texto === 'animate')return KR.KR_Plugin.animate = boolean;
   };

    if (command === 'Hud'){
    if(texto === 'hide')return KR.Hud.hide = true;
    if(texto === 'show')return KR.Hud.hide = false;
   }
};
